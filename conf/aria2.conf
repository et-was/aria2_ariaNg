#
# https://github.com/P3TERX/aria2.conf
# File nameï¼šaria2.conf
# Description: Awesome Aria2 configuration file
# Version: 2021.09.15
#
# Copyright (c) 2018-2021 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#

## File Save Settings ##

# Download directory. Absolute or relative path is available, default: current boot location
dir=/root/Download

# Disk cache, 0 disabled cache, default: 16M
# The function of disk cache is to temporarily store the downloaded data blocks in memory and then write them centrally to the hard disk to reduce disk I/O, improve read/write performance, and extend the life of the hard disk.
# It is recommended to increase memory appropriately when there is enough free memory, but not more than the amount of free memory left.
# This value only determines the upper limit, and actual memory usage depends on other factors such as network speed (bandwidth) and device performance.
disk-cache=64M

# file prealloc, optional: none, prealloc, trunc, falloc, default: prealloc
# Preallocation for mechanical hard disk can effectively reduce disk fragmentation, improve disk read-write performance, and extend disk life.
# File systems such as ext4 (with extended support), btrfs, xfs, or NTFS (MinGW compilation only) are recommended for falloc
# If you cannot download, prompt fallocate failed.cause:Operation not supported is not supported, set to none
# Prealloc allocations are slow and trunc is not recommended.
# Solid state drives do not need to be preallocated and are only recommended to be set to none, otherwise they may result in double file size data writing, which can affect life.
file-allocation=none

# File preallocation size limit.Files smaller than this option value do not preallocate space in units K or M, default: 5M
no-file-allocation-limit=64M

# breakpoint continuous transmission
continue=true

# Always try to breakpoint pass, unable to breakpoint pass terminates download, default: true
always-resume=false

# URI values for breakpoints are not supported and take effect when always-resume=false.
# This value is reached by downloading the header from scratch, with a value of 0, when all URIs do not support breakpoints.
max-resume-failure-tries=0

# Gets server file time, default: false
remote-time=true


## Progress save settings ##

# read download task from session file
input-file=/root/.aria2/aria2.session

# session file save path
# Aria2 Save 'error/uncompleted' download task to session file when exiting or at specified time interval
save-session=/root/.aria2/aria2.session

# Interval (in seconds) between sessions saved after a task state change, 0 is saved only when the process exits normally, default: 0
# To save the task status in time and prevent task loss, this value is recommended to be set to 1 only
save-session-interval=1

# Time interval (seconds) between automatic saving of task progress to control file (*.aria2), 0 is saved only when the process exits normally. Default: 60
# This value also indirectly affects how often cached data is written to disk from memory
# To reduce disk IOPS (reads and writes per second), increase the interval
# If you want to save as much download progress as possible during an unexpected abnormal exit, reduce the interval
# Abnormal Exit: Process Crash, System Crash, SIGKILL Signal, Device Power Off, etc.
auto-save-interval=20

# force save, save information to session file even when task is complete, default: false
# When opened, the .aria2 file is retained after the task is completed, and the file is removed and restarted if the task exists.
# The list of completed tasks after shutdown is cleared after restart.
force-save=false


## Download Connection Settings ##

# File not found retry count, default: 0 (disabled)
# Retries are also recorded, so you also need to set the max-tries option
max-file-not-found=10

# Maximum number of attempts, 0 for infinite, default: 5
max-tries=0

# Retry wait time (seconds), default: 0 (disabled)
retry-wait=10

# Connection timeout in seconds. Default: 60
connect-timeout=10

# Timeout in seconds. Default: 60
timeout=10

# Maximum number of simultaneous download tasks, modifiable at runtime, default: 5
max-concurrent-downloads=5

# Maximum number of connection threads per server, specified when task is added, default: 1
# The maximum value is 16 (extension unlimited) and is limited to the maximum number of connection threads per task (split).
max-connection-per-server=16

# Maximum number of connection threads per task, specified when task is added, default: 5
split=64

# File minimum segment size, specified when added, range 1M-1024M (enhanced minimum is 1K), default: 20M
# If the value is 10M, when the file is 20MB, it is split into two segments and downloaded using two sources, while if the file is 15MB, only one source is downloaded.
# Theoretically, the smaller the value, the more download segments are used, the larger the actual number of threads available, and the faster the download is, but limited by the downloaded file server's policy.
min-split-size=4M

# HTTP/FTP download fragment size, all segments must be multiples of this value, with a minimum value of 1M (enhanced version is 1K), default: 1M
piece-length=1M

# Allows fragmentation size changes.Default: false
# false: the download will stop when the slice size is different from the file
# true: missing part of the download progress to continue downloading
allow-piece-length-change=true

# Minimum download speed limit.Close the connection when the download speed is less than or equal to the value of this option (the enhanced version is reconnected), which is independent of BT downloads.Unit K or M, default: 0 (unlimited)
lowest-speed-limit=0

# Global maximum download speed limit, changeable at runtime, default: 0 (unlimited)
max-overall-download-limit=0

# Single task download speed limit, default: 0 (unlimited)
max-download-limit=0

# Disable IPv6, default: false
disable-ipv6=true

# GZip support, default: false
http-accept-gzip=true

# URI multiplexing, default: true
reuse-uri=false

# Disable netrc support, default: false
no-netrc=true

# Allow overwrite and re-download from scratch when the related control file (.aria2) does not exist.Default: false
allow-overwrite=false

# The file is renamed automatically, and this option is valid only for HTTP(S)/FTP downloads.The new file name is preceded by a dot and a number (1,..99999) after the name extension.Default: true
auto-file-renaming=true

# Use UTF-8 to handle Content-Disposition, default: false
content-disposition-default-utf8=true

# Minimum TLS version, optional: TLSv1.1, TLSv1.2, TLSv1.3 Default: TLSv1.2
#min-tls-version=TLSv1.2


## BT/PT download settings ##

# BT listening port (TCP), default: 6881-6999
# Be sure to configure firewalls and security group policies to allow this port to enter on devices that go directly out of the network, such as VPS
# Devices in an intranet environment, such as NAS, need to set up an external network port on the router to forward to this port in addition to firewall settings
listen-port=51413

# DHT Network and UDP Tracker listening port (UDP), default: 6881-6999
# Depending on the protocol, you can use the same port as the BT listening port to facilitate configuration of firewalls and port forwarding policies.
dht-listen-port=51413

# When IPv4 DHT is enabled, PT download (private seed) is automatically disabled. Default: true
enable-dht=true

# When IPv6 DHT is enabled, PT download (private seed) is automatically disabled. Default: false
# Opening an environment without IPv6 support can cause DHT to malfunction
enable-dht6=false

# Specify IP addresses in BT and DHT networks
# Usage scenario: BT and DHT listening ports can be forwarded to servers with public network IPs when home broadband does not have public network IPs, where filling in the server's IP can speed up BT downloads.
#bt-external-ip=

# IPv4 DHT file path, default: $HOME/.aria2/dht.dat
dht-file-path=/root/.aria2/dht.dat

# IPv6 DHT file path, default: $HOME/.aria2/dht6.dat
dht-file-path6=/root/.aria2/dht6.dat

# IPv4 DHT Network Boot Node
dht-entry-point=dht.transmissionbt.com:6881

# IPv6 DHT Network Boot Node
dht-entry-point6=dht.transmissionbt.com:6881

# Local node finds that PT download (private seed) is automatically disabled by default: false
bt-enable-lpd=true

# Specify the interface for local node discovery, possible values: interface, IP address
# If this option is not specified, the default interface is selected.
#bt-lpd-interface=

# Enable node exchange, PT download (private seed) will be disabled automatically, default: true
enable-peer-exchange=true

# BT downloads the maximum number of connections (single task), which can be modified at runtime.0 is unrestricted. Default: 55
# Ideally, the more connections you have, the faster you download, but in reality, only a few of the connections are uploaded faster, and the rest are uploaded slowly or not.
# If not restricted, process crashes or network jams can occur due to too many connections when downloading very popular seeds or when the number of tasks is very high.
# Process crashes: Aria2 processes are forced to terminate due to insufficient resources if device CPU performance is mediocre and too many connections result in excessive CPU usage.
# Network blocking: In an intranet environment, even if the download is not full bandwidth, other devices will not be able to access the Internet properly.Because of the forwarding performance bottleneck of ancient low-performance routers.
bt-max-peers=128

# BT downloads the expected speed (single task) and can be modified at runtime.Units K or M.Default: 50K
# BT downloads below this option will temporarily increase the number of connections to get faster downloads, provided there are more growers available.
# There is no upper limit to increase the number of connections temporarily, but it will not increase indefinitely, and it will be adjusted according to the algorithm.
bt-request-peer-speed-limit=10M

# Global maximum upload speed limit, changeable at runtime, default: 0 (unlimited)
# Setting too low may affect BT download speed
max-overall-upload-limit=2M

# Single task upload speed limit, default: 0 (unlimited)
max-upload-limit=0

# Minimum sharing rate.stop seeding when seed sharing reaches the value set by this option, 0 is always seeded, default: 1.0
# It is strongly recommended that you set this option to 1.0 or greater
seed-ratio=1.0

# Minimum planting time (minutes).Set to 0 to stop planting when BT task download is complete.
seed-time=0

# does pre-seeding check file hashes, default: true
bt-hash-check-seed=true

# When continuing with previous BT tasks, no recheck is required. Default: false
bt-seed-unverified=false

# BT tracker server connection timeout in seconds.Default: 60
# When a connection is established, this option is invalid and the value of the bt-tracker-timeout option is used
bt-tracker-connect-timeout=10

# BT tracker server timeout in seconds.Default: 60
bt-tracker-timeout=10

# BT server connection interval in seconds. Default: 0 (automatic)
#bt-tracker-interval=0

# BT Download Preferred Download File Start or End
bt-prioritize-piece=head=32M,tail=32M

# Save the seed file (.torrent) uploaded via the WebUI(RPC), default: true
# All options that involve saving seed files are recommended to be turned on. Failure to save seed files risks losing the task.
# Customizing the temporary download directory through RPC might not save the seed file.
rpc-save-upload-metadata=true

# download seed file (.torrent) automatically starts downloading, default: true, optional: false|mem
# true: save the seed file
# false: Download only the seed file
# mem: Save the seeds in memory
follow-torrent=true

# Pause the task after downloading the seed file. Default: false
# Downloading a seed file or magnetic force after turning on the following-torrent option automatically starts downloading the task, while turning on this option creates and pauses the task.
pause-metadata=false

# save magnetic link metadata as seed file (.torrent), default: false
bt-save-metadata=true

# Load saved metadata file (.torrent), default: false
bt-load-saved-metadata=true

# Delete files not selected in BT download task, default: false
bt-remove-unselected-file=true

# BT forced encryption, default: false
# When enabled, the old BT handshake protocol is rejected and only obfuscated handshakes and encryption are used.Can solve some operators to BT download block, and have certain anti-copyright complaints and rapid bloodsucking effect.
# This option corresponds to the shortcut opening of the last two options (bt-require-crypto=true, bt-min-crypto-level=arc4), but does not change the values of both options.
bt-force-encryption=true

# BT encryption requirements, default: false
# When enabled, the connection is denied to the old BitTorrent handshake protocol (\19 BitTorrent protocol), always using confounding handshakes.
#bt-require-crypto=true

# BT minimum encryption level, optional: plain, arc4 (encryption), default: plain
#bt-min-crypto-level=arc4

# seperate does only one kind of task, default: false
# Exclude downloaded and in-progress tasks from the task being downloaded, and start waiting for the next task in the list.
bt-detach-seed-only=true


## client camouflage ##

# Custom User Agent
user-agent=Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/93.0.4577.63 Safari/537.36 Edg/93.0.961.47

# BT client camouflage
# PT downloading requires consistent user-agent and peer-agent parameters
# Some PT stations have special blocking mechanisms for Aria2, client impersonation is not necessarily effective, and there is a risk of blocking accounts.
#user-agent=Deluge 1.3.15
peer-agent=Deluge 1.3.15
peer-id-prefix=-DE13F0-


## Execution of Additional Orders ##

# Command executed after download stop
# Triggers from downloading to deleting, error, and completion.Pause is marked as not starting download, so it is irrelevant to this item.
on-download-stop=/root/.aria2/delete.sh

# Commands executed after downloading is complete
# This undefined executes the on-download-stop command after the download stops
on-download-complete=/root/.aria2/clean.sh

# command executed after download error
# This undefined executes the on-download-stop command after the download stops
#on-download-error=

# Download command executed after pause
#on-download-pause=

# Commands to be executed after downloading
#on-download-start=

# BT commands executed after downloading is complete
#on-bt-download-complete=


## RPC Settings ##

# Enable JSON-RPC/XML-RPC server, default: false
enable-rpc=true

# Accept all remote requests, default: false
rpc-allow-origin-all=true

# allow external access, default: false
rpc-listen-all=true

# RPC listening port, default: 6800
rpc-listen-port=6800

# RPC key
rpc-secret=P3TERX

# RPC maximum request size
rpc-max-request-size=10M

# RPC service SSL/TLS encryption, default: false
# After enabling encryption, you must connect using the https or wss protocol
# Turning on is not recommended, and web server reverse proxies, such as Nginx and Caddy, are recommended for greater flexibility.
#rpc-secure=false

# Certificate file (.pem/.crt) when SSL/TLS encryption is enabled in the RPC service
#rpc-certificate=/root/.aria2/xxx.pem

# Private key file (.key) when SSL/TLS encryption is enabled in the RPC service
#rpc-private-key=/root/.aria2/xxx.key

# Event polling, optional: epoll, kqueue, port, poll, select, different system defaults
#event-poll=select


## advanced option ##

# Enables asynchronous DNS functionality.Default: true
#async-dns=true

# Specifies the list of asynchronous DNS servers, which is read from /etc/resolv.conf if not specified.
#async-dns-server=119.29.29.29,223.5.5.5,8.8.8.8,1.1.1.1

# Specify a single network interface, possible values: interface, IP address, hostname
# If the interface has more than one IP address, it is recommended that you specify an IP address.
# Specifying a network interface is known to affect functional scenarios that depend on local RPC connections, i.e. communication with the Aria2 server is not possible via localhost and 127.0.0.1.
#interface=

# Specifies multiple network interfaces separated by commas (,) between values.
# This is ignored when using the interface option.
#multiple-interface=


## log setting ##

# log file save path, ignore or set to empty for no save, default: no save
#log=

# Log level, optional debug, info, notice, warning, error.Default: debug
#log-level=warn

# Console logging level, optional debug, info, notice, warning, error, default: notice
console-log-level=notice

# Quiet mode, disable log output on console, default: false
quiet=false

# Download progress summary output interval (seconds), 0 is forbidden output.Default: 60
summary-interval=0


## Enhanced Extension Settings (Unofficial) ##

# Only for enhanced versions built by myfreeer/aria2-build-msys2 (Windows) and P3TERX/Aria2-Pro-Core (GNU/Linux) projects

# Retry when the server returns HTTP 400 Bad Request, valid only if retry-wait > 0, default false
#retry-on-400=true

# Retry when the server returns HTTP 403 Forbidden, valid only if retry-wait > 0, default false
#retry-on-403=true

# Retry when the server returns HTTP 406 Not Acceptable, valid only if retry-wait > 0, default false
#retry-on-406=true

# Retry when the server returns an unknown status code, valid only if retry-wait > 0, default false
#retry-on-unknown=true

# Whether to send the Want-Digest HTTP header.Default: false (not sent)
# Some websites will use this header as a feature to detect and block Aria2
#http-want-digest=false


## BitTorrent trackers ##
bt-tracker=
